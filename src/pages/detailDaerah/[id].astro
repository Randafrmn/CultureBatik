---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HeroPage from "../../components/HeroPage.astro";
import "../../styles/global.css";
import Swal from "sweetalert2/dist/sweetalert2.js";

const response = await fetch(
  "https://backend-cultik-l0xm2i4e6-kennis-projects-1f9db525.vercel.app/dataPenghasil"
);
const data = await response.json();
const daerahData = data.data.daerah_penghasil;

export function getStaticPaths() {
  return daerahData.map((daerah) => ({
    params: { id: daerah._id.$oid },
  }));
}

const getDaerahDetailById = (id) => {
  return daerahData.find((daerah) => daerah._id.$oid === id);
};

const { id } = Astro.params;
const daerah = getDaerahDetailById(id);
---

<BaseLayout>
  <HeroPage
    title={daerah ? daerah.nama_daerah : ""}
    description="Home / Detail Daerah"
  />

  {
    daerah ? (
      <div class="container mx-auto my-12 p-6">
        <div
          class="flex flex-col items-center justify-center"
          data-aos="fade-right"
          data-aos-duration="1000"
          data-aos-anchor-placement="top-bottom"
          data-aos-easing="ease-in-out"
        >
          <img
            class="areas-image w-full md:w-3/4 mb-4 md:mb-0 rounded-lg shadow-md"
            src={daerah.gambar}
            alt={daerah.nama_daerah}
          />
          <div class="flex-1 md:w-3/4">
            <h2 class="text-2xl font-bold mb-2 mt-4 text-gray-800">
              {daerah.nama_daerah}
            </h2>
            <p class="font-medium text-lg mb-2 text-gray-600">
              {daerah.alamat}
            </p>
            <p class="text-base leading-relaxed text-justify text-gray-700">
              {daerah.deskripsi}
            </p>
          </div>
        </div>
        <div class="container mx-auto mt-12 md:p-6">
          {daerah.batik.map((batik) => (
            <div
              class="flex flex-col items-center justify-center bg-[#F4F0EC] rounded-3xl my-6 p-6"
              data-aos="fade-right"
              data-aos-duration="1000"
              data-aos-anchor-placement="top-bottom"
              data-aos-easing="ease-in-out"
            >
              <h1 class="text-2xl md:text-4xl font-bold text-center pb-6">
                {batik.nama_batik}
              </h1>
              <img
                class="areas-image w-full md:w-3/4 mb-4 md:mb-4 rounded-lg shadow-md"
                src={batik.motif_batik}
                alt={batik.nama_batik}
              />
              <div class="flex-1 md:w-3/4">
                <p class="text-base leading-relaxed text-justify text-gray-700">
                  {batik.sejarah}
                </p>
                <p class="text-base leading-relaxed mt-2 text-justify text-gray-700">
                  {batik.makna_batik}
                </p>
              </div>
            </div>
          ))}
        </div>
        <div
          class="region container mx-auto px-6 py-8 my-28 bg-[#F4F0EC] rounded-3xl"
          data-daerah-id={daerah._id.$oid}
        >
          <h3>Komentar</h3>
          <form id="reviewForm" class="review-form-container mb-4">
            <label for="name">Nama:</label>
            <input type="text" id="name" required />
            <label for="review">Komentar:</label>
            <textarea id="review" required />
            <button type="submit">Submit</button>
          </form>
          <ul id="reviewsList" class="bg-gray-100 p-4 rounded-lg" />
        </div>
      </div>
    ) : (
      <div id="detail-container">Data not found {id}</div>
    )
  }
</BaseLayout>

<script is:inline src="https://unpkg.com/aos@2.3.1/dist/aos.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" defer></script>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    if (typeof Swal === "undefined") {
      console.error("SweetAlert2 is not loaded");
      return;
    }

    AOS.init();

    const daerahElement = document.querySelector(".region");
    if (!daerahElement) {
      console.error("Daerah element not found");
      return;
    }

    const daerahId = daerahElement.getAttribute("data-daerah-id");
    if (!daerahId) {
      console.error("Daerah ID not found");
      return;
    }

    const form = document.getElementById("reviewForm");
    const reviewList = document.getElementById("reviewsList");

    if (!form || !reviewList) {
      console.error("Form or review list element not found");
      return;
    }

    // Fetch existing reviews
    fetch(
      `https://backend-cultik-l0xm2i4e6-kennis-projects-1f9db525.vercel.app/reviews/daerah/${daerahId}`
    )
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok " + response.statusText);
        }
        return response.json();
      })
      .then((data) => {
        if (data && data.data && data.data.reviews) {
          const reviews = data.data.reviews;
          displayReviews(reviews, reviewList);
        } else {
          console.error("Data format is not as expected:", data);
        }
      })
      .catch((error) => console.error("Error fetching reviews:", error));

    // Submit new review
    form.addEventListener("submit", (e) => {
      e.preventDefault();
      const name = form.querySelector("#name").value;
      const review = form.querySelector("#review").value;

      fetch(
        "https://backend-cultik-l0xm2i4e6-kennis-projects-1f9db525.vercel.app/reviews",
        {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ daerahId, name, review }),
        }
      )
        .then((response) => {
          if (!response.ok) {
            throw new Error(
              "Network response was not ok " + response.statusText
            );
          }
          Swal.fire({
            icon: "success",
            title: "Review berhasil dimasukkan!",
            showConfirmButton: true,
            confirmButtonText: "OK",
          });
          return response.json();
        })
        .then((data) => {
          return fetch(
            `https://backend-cultik-l0xm2i4e6-kennis-projects-1f9db525.vercel.app/reviews/daerah/${daerahId}`
          )
            .then((response) => {
              if (!response.ok) {
                throw new Error(
                  "Network response was not ok " + response.statusText
                );
              }
              return response.json();
            })
            .then((updatedData) => {
              if (updatedData && updatedData.data && updatedData.data.reviews) {
                const updatedReviews = updatedData.data.reviews;
                displayReviews(updatedReviews, reviewList);
              } else {
                console.error(
                  "Updated data format is not as expected:",
                  updatedData
                );
              }
            })
            .catch((error) =>
              console.error("Error fetching updated reviews:", error)
            );
        })
        .catch((error) => {
          console.error("Error posting review:", error);
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: "Review gagal dimasukkan",
            showConfirmButton: true,
            confirmButtonText: "OK",
          });
        });

      form.reset();
    });

    function displayReviews(reviews, reviewList) {
      reviewList.innerHTML = "";
      reviews.forEach(({ id, name, review }) => {
        const li = document.createElement("li");
        const nameElement = document.createElement("div");
        const reviewElement = document.createElement("div");
        const deleteButton = document.createElement("button");

        nameElement.textContent = `Nama: ${name}`;
        reviewElement.textContent = `Komentar: ${review}`;
        deleteButton.textContent = "Delete";
        deleteButton.classList.add(
          "bg-red-500",
          "text-white",
          "p-1",
          "rounded",
          "mt-2"
        );

        deleteButton.addEventListener("click", () => {
          Swal.fire({
            title: "Anda yakin ingin menghapus review ini?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Hapus",
            cancelButtonText: "Batal",
          }).then((result) => {
            if (result.isConfirmed) {
              fetch(
                `https://backend-cultik-l0xm2i4e6-kennis-projects-1f9db525.vercel.app/reviews/${id}`,
                {
                  method: "DELETE",
                }
              )
                .then(() => {
                  Swal.fire({
                    icon: "success",
                    title: "Review berhasil dihapus!",
                    showConfirmButton: true,
                    confirmButtonText: "OK",
                  });
                  return fetch(
                    `https://backend-cultik-l0xm2i4e6-kennis-projects-1f9db525.vercel.app/reviews/daerah/${daerahId}`
                  )
                    .then((response) => {
                      if (!response.ok) {
                        throw new Error(
                          "Network response was not ok " + response.statusText
                        );
                      }
                      return response.json();
                    })
                    .then((updatedData) => {
                      if (
                        updatedData &&
                        updatedData.data &&
                        updatedData.data.reviews
                      ) {
                        const updatedReviews = updatedData.data.reviews;
                        displayReviews(updatedReviews, reviewList);
                      } else {
                        console.error(
                          "Updated data format is not as expected:",
                          updatedData
                        );
                      }
                    })
                    .catch((error) =>
                      console.error("Error fetching updated reviews:", error)
                    );
                })
                .catch((error) => {
                  console.error("Error deleting review:", error);
                  Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Gagal menghapus review",
                    showConfirmButton: true,
                    confirmButtonText: "OK",
                  });
                });
            }
          });
        });

        li.appendChild(nameElement);
        li.appendChild(document.createElement("br"));
        li.appendChild(reviewElement);
        li.appendChild(deleteButton);

        li.classList.add("bg-white", "p-2", "my-2", "rounded-lg", "shadow-md");
        reviewList.appendChild(li);
      });
    }
  });
</script>
